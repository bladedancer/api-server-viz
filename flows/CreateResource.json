{
	"schemaVersion": "4",
	"info": {
		"name": "Store Resource",
		"description": "Store resources in memory cache."
	},
	"parameter": {
		"properties": {
			"request": {
				"description": "The request"
			},
			"config": {
				"type": "object",
				"description": "The service's configuration"
			},
			"env": {
				"type": "object",
				"description": "The host OS environment"
			}
		},
		"additionalProperties": false
	},
	"start": "javascript.1",
	"nodes": {
		"resource.1": {
			"type": "nodehandler://api-builder-flow-invoke/model/resource",
			"name": "Upsert",
			"method": "upsert",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$.model",
					"metaName": "data"
				}
			],
			"outputs": {
				"error": {
					"routes": [
						"invoke-flow-response.2"
					],
					"context": "$.error",
					"metaName": "Error"
				},
				"update": {
					"routes": [
						"invoke-flow-response.1"
					],
					"context": "$.model",
					"metaName": "Update"
				},
				"insert": {
					"routes": [
						"invoke-flow-response.1"
					],
					"context": "$.model",
					"metaName": "Insert"
				}
			},
			"metaMethod": "Upsert"
		},
		"invoke-flow-response.1": {
			"type": "nodehandler://@axway/api-builder-plugin-invoke-flow/invoke-flow-response",
			"name": "Success",
			"method": "setResponse",
			"parameters": [
				{
					"name": "isError",
					"type": "boolean",
					"value": "false",
					"metaName": "Is Error",
					"metaDescription": "Indicates that the response is an error.  This will cause the `Invoke Flow` to trigger the `Error` output with this value."
				},
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$.model",
					"metaName": "Data",
					"metaDescription": "The result to be returned to the flow that called `Invoke Flow`."
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [],
					"metaName": "Error"
				}
			},
			"metaMethod": "Set Response"
		},
		"invoke-flow-response.2": {
			"type": "nodehandler://@axway/api-builder-plugin-invoke-flow/invoke-flow-response",
			"name": "Error",
			"method": "setResponse",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$.error",
					"metaName": "Data",
					"metaDescription": "The result to be returned to the flow that called `Invoke Flow`."
				},
				{
					"name": "isError",
					"type": "boolean",
					"value": "true",
					"metaName": "Is Error",
					"metaDescription": "Indicates that the response is an error.  This will cause the `Invoke Flow` to trigger the `Error` output with this value."
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [],
					"metaName": "Error"
				}
			},
			"metaMethod": "Set Response"
		},
		"javascript.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "FormatId",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$.request",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"return {\\n    ...data,\\n    id: `${data.metadata.id}`\\n  };\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
				}
			],
			"outputs": {
				"next": {
					"context": "$.model",
					"routes": [
						"resource.1"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"invoke-flow-response.2"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		}
	}
}