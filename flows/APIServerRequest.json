{
	"schemaVersion": "4",
	"info": {
		"name": "API Server Request",
		"description": "Invoke API Server"
	},
	"parameter": {
		"properties": {
			"request": {
				"description": "The request"
			},
			"config": {
				"type": "object",
				"description": "The service's configuration"
			},
			"env": {
				"type": "object",
				"description": "The host OS environment"
			}
		},
		"additionalProperties": false
	},
	"start": "javascript.1",
	"nodes": {
		"invoke-flow-response.1": {
			"type": "nodehandler://@axway/api-builder-plugin-invoke-flow/invoke-flow-response",
			"name": "Set Response",
			"method": "setResponse",
			"parameters": [
				{
					"name": "isError",
					"type": "jsonpath",
					"value": "$.response.isError",
					"metaName": "Is Error",
					"metaDescription": "Indicates that the response is an error.  This will cause the `Invoke Flow` to trigger the `Error` output with this value."
				},
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$.response.data",
					"metaName": "Data",
					"metaDescription": "The result to be returned to the flow that called `Invoke Flow`."
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [],
					"metaName": "Error"
				}
			},
			"metaMethod": "Set Response"
		},
		"rest.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-restclient/rest",
			"name": "GET",
			"method": "get",
			"parameters": [
				{
					"name": "url",
					"type": "jsonpath",
					"value": "$.url",
					"metaName": "URL",
					"metaDescription": "The target URL."
				},
				{
					"name": "headers",
					"type": "jsonpath",
					"value": "$.headers",
					"metaName": "Headers",
					"metaDescription": "The HTTP headers to set."
				},
				{
					"name": "followRedirect",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Follow redirect",
					"metaDescription": "Follow HTTP 3xx responses as redirects."
				}
			],
			"outputs": {
				"2xx": {
					"routes": [
						"javascript.6"
					],
					"context": "$.response",
					"metaName": "2XX"
				},
				"3xx": {
					"routes": [
						"javascript.5"
					],
					"context": "$.response",
					"metaName": "3XX"
				},
				"4xx": {
					"routes": [
						"condition.2"
					],
					"context": "$.response",
					"metaName": "4XX"
				},
				"5xx": {
					"routes": [
						"javascript.5"
					],
					"context": "$.response",
					"metaName": "5XX"
				},
				"error": {
					"routes": [
						"javascript.3"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "GET"
		},
		"authz.1": {
			"type": "nodehandler://axway-flow-authorization/authz",
			"name": "ServiceAccountCredential",
			"method": "getCredential",
			"parameters": [
				{
					"name": "name",
					"type": "string",
					"value": "\"central\"",
					"metaName": "Name",
					"metaDescription": "The name of the configured credential to find and return."
				}
			],
			"outputs": {
				"next": {
					"context": "$.credential",
					"routes": [
						"rest.1",
						"javascript.7"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"javascript.3"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Get Credential"
		},
		"condition.1": {
			"type": "nodehandler://axway-flow/condition",
			"name": "CheckUrl",
			"method": "exists",
			"parameters": [
				{
					"name": "source",
					"type": "jsonpath",
					"value": "$.request.url",
					"metaName": "Source",
					"metaDescription": "The input to test."
				}
			],
			"outputs": {
				"true": {
					"routes": [
						"authz.1"
					],
					"context": "$.exists",
					"metaName": "True"
				},
				"false": {
					"routes": [
						"javascript.2"
					],
					"context": "$.exists",
					"metaName": "False"
				}
			},
			"metaMethod": "Exists"
		},
		"javascript.2": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "InvalidURLError",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$.request",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"return {\\n    isError: true,\\n    data: `The request url is not valid. Url: ${data}`\\n  };\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [
						"invoke-flow-response.1"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"javascript.3"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"javascript.3": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "UnexpectedError",
			"method": "Execute",
			"parameters": [
				{
					"name": "code",
					"type": "string",
					"value": "\"return {\\n    isError: true,\\n    data\\n  };\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
				},
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$.error",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [
						"invoke-flow-response.1"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.response",
					"routes": [
						"invoke-flow-response.1"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"javascript.4": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "FormatHeaders",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"return {\\n   \\\"Authorization\\\": \\\"Bearer \\\" + data.credential\\n };\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
				}
			],
			"outputs": {
				"next": {
					"context": "$.headers",
					"routes": [
						"rest.1",
						"logger.1"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"javascript.3"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"javascript.5": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "HttpError",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$.response",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"return {\\n    isError: true,\\n    data: `HTTP Error. ${JSON.stringify(data)}`\\n  };\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [
						"invoke-flow-response.1"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"javascript.3"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"javascript.6": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "FormatResponse",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$.response",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"return {\\n    isError: false,\\n    data: data.body\\n  };\""
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [
						"invoke-flow-response.1"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"javascript.3"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"javascript.7": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "FormatUrl",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"var fields = data.request.fields ? `&fields=${data.request.fields.join()}` : '';\\n  return `${data.config.apiserver.baseUrl}${data.request.url}?page=${data.request.page || 1}&pageSize=${data.request.pageSize || 20}${fields}`;\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
				}
			],
			"outputs": {
				"next": {
					"context": "$.url",
					"routes": [
						"javascript.4"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"javascript.3"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"javascript.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "Execute",
			"method": "Execute",
			"parameters": [
				{
					"name": "code",
					"type": "string",
					"value": "\"logger.info(JSON.stringify(data));\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
				},
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"condition.1"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"condition.1"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"logger.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-logger/logger",
			"name": "Log Message",
			"method": "log",
			"parameters": [
				{
					"name": "message",
					"type": "jsonpath",
					"value": "$.url",
					"metaName": "Message",
					"metaDescription": "The log message."
				},
				{
					"name": "level",
					"type": "string",
					"value": "\"info\"",
					"metaName": "Level",
					"metaDescription": "The desired log level of the output logs."
				}
			],
			"outputs": {
				"next": {
					"context": null,
					"routes": [],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [],
					"metaName": "Error"
				}
			},
			"metaMethod": "Log Message"
		},
		"condition.2": {
			"type": "nodehandler://axway-flow/condition",
			"name": "IsIgnored403",
			"method": "equals",
			"parameters": [
				{
					"name": "source",
					"type": "jsonpath",
					"value": "$.response.status",
					"metaName": "Source",
					"metaDescription": "The input to test."
				},
				{
					"name": "value",
					"type": "number",
					"value": "403",
					"metaName": "Value",
					"metaDescription": "The value to test input against."
				}
			],
			"outputs": {
				"true": {
					"routes": [
						"setcontext.1"
					],
					"context": "$.equals",
					"metaName": "True"
				},
				"false": {
					"routes": [
						"javascript.5"
					],
					"context": "$.equals",
					"metaName": "False"
				}
			},
			"metaMethod": "Equals"
		},
		"setcontext.1": {
			"type": "nodehandler://axway-flow/setcontext",
			"name": "Set Context",
			"method": "setcontext",
			"parameters": [
				{
					"name": "value",
					"type": "object",
					"value": "{\n\"body\": []\n}"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [
						"javascript.6"
					]
				}
			}
		}
	}
}