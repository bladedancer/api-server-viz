{
	"schemaVersion": "4",
	"info": {
		"name": "Load Everything",
		"description": "Load all resource definitions and then load all instances of those resources."
	},
	"parameter": {
		"properties": {
			"request": {
				"description": "The request"
			},
			"config": {
				"type": "object",
				"description": "The service's configuration"
			},
			"env": {
				"type": "object",
				"description": "The host OS environment"
			},
			"params": {
				"type": "object",
				"description": "The params"
			}
		},
		"additionalProperties": false
	},
	"start": "javascript.1",
	"nodes": {
		"invoke-flow.1": {
			"type": "nodehandler://@axway/api-builder-plugin-invoke-flow/invoke-flow",
			"name": "LoadResources",
			"method": "invokeFlowForEach",
			"parameters": [
				{
					"name": "id",
					"type": "string",
					"value": "\"LoadResources\"",
					"metaName": "Flow Listener ID",
					"metaDescription": "The ID of a previously configured `Flow Listener`."
				},
				{
					"name": "items",
					"type": "jsonpath",
					"value": "$.definitionUrls",
					"metaName": "Items",
					"metaDescription": "An array of input items where each item will be passed as request data when invoking the flow."
				},
				{
					"name": "breakOnError",
					"type": "boolean",
					"value": "false",
					"metaName": "Break on error",
					"metaDescription": "If true, this will break out of the flow invocation loop when the first error occurs. When Concurrency is not set to 1, all remaining requests currently being executed will be processed before breaking."
				}
			],
			"outputs": {
				"next": {
					"routes": [
						"invoke-flow.2"
					],
					"context": "$.definitionsArray",
					"metaName": "Next"
				},
				"error": {
					"routes": [
						"http.2"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "Invoke Flow (for-each)"
		},
		"http.1": {
			"type": "nodehandler://axway-flow/http",
			"name": "Success",
			"method": "setresponse",
			"parameters": [
				{
					"name": "status",
					"type": "number",
					"value": "200",
					"metaName": "Status",
					"metaDescription": "The HTTP status code"
				},
				{
					"name": "body",
					"type": "jsonpath",
					"value": "$.flowResponse",
					"metaName": "Body",
					"metaDescription": "The response payload"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [
						"invoke-flow-response.1"
					],
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"http.2": {
			"type": "nodehandler://axway-flow/http",
			"name": "Error",
			"method": "setresponse",
			"parameters": [
				{
					"name": "status",
					"type": "number",
					"value": "500",
					"metaName": "Status",
					"metaDescription": "The HTTP status code"
				},
				{
					"name": "body",
					"type": "jsonpath",
					"value": "$.error",
					"metaName": "Body",
					"metaDescription": "The response payload"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [
						"invoke-flow-response.2"
					],
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"javascript.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "FormatReqUrls",
			"method": "Execute",
			"parameters": [
				{
					"name": "code",
					"type": "string",
					"value": "\"return [\\n    { url: \\\"/definitions/v1alpha1/groups\\\" },\\n    { url: \\\"/definitions/v1alpha1/resources\\\" },\\n    { url: \\\"/definitions/v1alpha1/resourceversions\\\" },\\n    { url: \\\"/definitions/v1alpha1/commandlines\\\" }\\n  ];\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
				}
			],
			"outputs": {
				"next": {
					"context": "$.definitionUrls",
					"routes": [
						"invoke-flow.1"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"http.2"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"javascript.2": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "Flatten",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"return [\\n    ...data.instanceArray,\\n    ...data.definitionsArray\\n  ].flat();\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
				}
			],
			"outputs": {
				"next": {
					"context": "$.flowResponse",
					"routes": [
						"http.1"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"http.2"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"invoke-flow.2": {
			"type": "nodehandler://@axway/api-builder-plugin-invoke-flow/invoke-flow",
			"name": "Load Instances",
			"method": "invokeFlow",
			"parameters": [
				{
					"name": "id",
					"type": "string",
					"value": "\"loadInstances\"",
					"metaName": "Flow Listener ID",
					"metaDescription": "The ID of a previously configured `Flow Listener`."
				}
			],
			"outputs": {
				"next": {
					"routes": [
						"javascript.2"
					],
					"context": "$.instanceArray",
					"metaName": "Next"
				},
				"error": {
					"routes": [
						"http.2"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "Invoke Flow"
		},
		"invoke-flow-response.1": {
			"type": "nodehandler://@axway/api-builder-plugin-invoke-flow/invoke-flow-response",
			"name": "Success",
			"method": "setResponse",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$.flowResponse"
				},
				{
					"name": "isError",
					"type": "boolean",
					"value": "false"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": []
				},
				"error": {
					"context": "$.error",
					"routes": []
				}
			}
		},
		"invoke-flow-response.2": {
			"type": "nodehandler://@axway/api-builder-plugin-invoke-flow/invoke-flow-response",
			"name": "Set Response",
			"method": "setResponse",
			"parameters": [
				{
					"name": "isError",
					"type": "boolean",
					"value": "true"
				},
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$.error"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": []
				},
				"error": {
					"context": "$.error",
					"routes": []
				}
			}
		}
	}
}